<div>

         <p><a href="http://www.electricmonk.nl/log/2008/06/24/why-you-shouldnt-be-using-s3-or-google-app-engine/">Ferry Boender</a> thinks you shouldn&#39;t be using <a href="http://code.google.com/appengine/">Google App Engine</a> or <a href="http://aws.amazon.com/s3">Amazon S3</a>, because of vendor lock-in. Here&#39;s why it doesn&#39;t matter: these services aren&#39;t about the API, for the most part, they&#39;re about the infrastructure. It&#39;s trivial to implement S3&#39;s API, probably not more than a few hours of work; heck, Apache with PUT support and a custom directory index is already 80% of the way there. Similarly, I understand that Google App Engine includes a test harness you can run your application on. However, for a real application, you need a scalable, robust, and highly-available implementation, and that&#39;s where the difficulty lies. The reason why you&#39;re &quot;locked in&quot; to S3 is because nobody else is offering such a service yet, not because of their API; porting your code to any comparable service would be trivial (if it&#39;s not trivial, then I doubt you can claim that it&#39;s a comparable service).</p><p>He also raises the issue of debugging: if someone else&#39;s service breaks, you have to wait for them to fix it instead of fixing it yourself; and that&#39;s a fair point. You have mostly the same with proprietary software components; if you don&#39;t have the source code, you probably need to wait for someone else to fix it, instead of being able to debug it yourself (although you do have some recourse in the form of system debuggers and disassemblers). However, the converse situation also exists: if you implement and run the service yourself, then when it breaks, you *have* to fix it. In other words, this isn&#39;t so much about debugging, as who can do a better job. Think you can do a better job than Amazon? Really? Then go ahead and reimplement S3 yourself; maybe you should even think about going into competition with them. For most people, however, this is not the case; I probably have the technical skills to implement such a service, but I certainly don&#39;t have the resources and infrastructure, and I want to get on with implementing my own application, so I&#39;m happy to pay Amazon to do the work for me instead. By all accounts, they&#39;re doing a pretty good job overall; and of course, bear in mind that Amazon are running their own applications on that infrastructure too.</p><p>Finally, if you want better support than you get for free on the AWS forums etc., you can always <a href="http://www.amazon.com/b?ie=UTF8&amp;node=566801011">pay for better support</a>.<br /></p>

                </div>